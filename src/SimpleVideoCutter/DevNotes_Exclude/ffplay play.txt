Playing a video with `ffplay` in a WinForms application involves launching `ffplay` as an external process and embedding its video output in a `PictureBox` control. You'll need to use the `Process` class to start and control `ffplay`. Here's an example of how to do it:

1. Create a WinForms application or open an existing one.

2. Add a `PictureBox` control to your form. This control will display the video.

3. Create a button or some other UI element to trigger video playback.

4. Add a reference to the `System.Diagnostics` namespace for working with processes.

Here's a simplified example:

```csharp
using System;
using System.Diagnostics;
using System.Windows.Forms;

namespace VideoPlayerApp
{
    public partial class MainForm : Form
    {
        private Process ffplayProcess;

        public MainForm()
        {
            InitializeComponent();
        }

        private void PlayButton_Click(object sender, EventArgs e)
        {
            StartVideoPlayback("video.mp4"); // Replace with your video file path
        }

        private void StartVideoPlayback(string videoFilePath)
        {
            if (ffplayProcess != null && !ffplayProcess.HasExited)
            {
                // Stop the existing ffplay process if it's running
                ffplayProcess.Kill();
                ffplayProcess.Dispose();
            }

            // Start a new ffplay process
            ffplayProcess = new Process();
            ffplayProcess.StartInfo.FileName = "ffplay"; // Assumes ffplay is in your PATH
            ffplayProcess.StartInfo.Arguments = $"-window_title VideoPlayer \"{videoFilePath}\" -x {pictureBox.Width} -y {pictureBox.Height} -noborder";
            ffplayProcess.StartInfo.UseShellExecute = false;
            ffplayProcess.StartInfo.RedirectStandardOutput = true;
            ffplayProcess.StartInfo.CreateNoWindow = true;
            ffplayProcess.OutputDataReceived += FfplayOutputDataReceived;
            ffplayProcess.Start();
            ffplayProcess.BeginOutputReadLine();

            // Set the picture box as the parent of the ffplay window
            SetParent(ffplayProcess.MainWindowHandle, pictureBox.Handle);
        }

        private void FfplayOutputDataReceived(object sender, DataReceivedEventArgs e)
        {
            // Handle ffplay's output data if needed
        }

        [System.Runtime.InteropServices.DllImport("user32.dll")]
        private static extern IntPtr SetParent(IntPtr hWndChild, IntPtr hWndNewParent);
    }
}
```

In this code:

- The `PlayButton_Click` event handler is called when the user clicks a "Play" button. Replace `"video.mp4"` with the path to your video file.

- The `StartVideoPlayback` method starts the `ffplay` process with the specified video file and embeds its window into the `PictureBox` control.

- The `FfplayOutputDataReceived` method can be used to handle any output data from `ffplay`. You can customize this method as needed.

- The `SetParent` method from `user32.dll` is used to set the parent of the `ffplay` window to the `PictureBox` control.

Make sure to adjust the video file path and `ffplay` command-line arguments as needed for your specific use case. Also, make sure that `ffplay` is available in your system's PATH or provide the full path to the `ffplay` executable.